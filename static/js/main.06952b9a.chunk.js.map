{"version":3,"sources":["logo.svg","store/Store.js","pages/Home.js","API.js","pages/Joke.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","defaultState","Category","History","joke","store","createStore","state","action","type","data","subscribe","console","log","getState","Home","useState","category","setCategory","to","onClick","dispatch","onMouseOver","e","className","src","alt","BASEURL","search","query","res","a","async","axios","get","then","catch","err","alert","searchall","Joke","dropdownchoice","setdropdownchoice","setJoke","delivery","setDelivery","setHistory","onChange","target","value","newChoice","API","jokeholder","setup","changeCategory","class","for","id","status","addJoke","App","basename","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06952b9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { createStore } from 'redux';\n\nlet defaultState = {\n    Category: 'Random',\n    History: [\n        {\n            joke: \"HAHAHA\"\n        }\n    ]\n};\n\nconst amount = (state = defaultState, action) => {\n    if(action.type==='DARK') {\n        return {\n            ...state,\n            Category: action.data\n        }\n    } else if(action.type==='MISC') {\n        return {\n            ...state,\n            Category: action.data\n        }\n    } else if(action.type==='RANDOM') {\n            return {\n                ...state,\n                Category: action.data\n            }\n    } else if(action.type==='PROGRAMMING') {\n        return {\n            ...state,\n            Category: action.data\n        } \n    } else if(action.type==='HISTORY') {\n        return {\n            ...state,\n            History: action.data\n        }\n    }\n    return state;\n}\n\nlet store = createStore(amount);\nstore.subscribe(function() {\n    console.log('state', store.getState())\n});\nexport default store\n","import React, { Component, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport store from '../store/Store';\n\nfunction Home() {\n    const [category, setCategory] = useState('Header');\n    return (\n        <>\n            <Link to='/joke' onClick={() => store.dispatch({ type: 'PROGRAMMING', data: 'Programming' })} onMouseOver={(e) => setCategory(\"Programming\")}><img className='categoryPictures' src='https://edgy.app/wp-content/uploads/2018/08/programming-FI-970x648.jpg' alt='category {category}' /></Link>\n            <Link to='/joke' onClick={() => store.dispatch({ type: 'MISC', data: 'Miscellaneous' })} onMouseOver={(e) => setCategory(\"Miscellaneous\")}><img className='categoryPictures' src='https://static.vecteezy.com/system/resources/previews/000/060/334/non_2x/white-miscellaneous-icon-vector-pack.jpg' alt='category {category}' /></Link>\n            <div className='homeCategory'>\n                <h1 className='homeText'>{category}</h1>\n            </div>\n            <Link to='/joke' onClick={() => store.dispatch({ type: 'DARK', data: 'Dark' })} onMouseOver={(e) => setCategory(\"Dark Humor\")}><img className='categoryPictures' src='https://buzznigeria.com/wp-content/uploads/2015/03/funny-e1430403378808-640x400.jpg' alt='category {category}' /></Link>\n            <Link to='/joke' onClick={() => store.dispatch({ type: 'RANDOM', data: 'Random' })} onMouseOver={(e) => setCategory(\"Random Joke\")}><img className='categoryPictures' src='https://vrzkj25a871bpq7t1ugcgmn9-wpengine.netdna-ssl.com/wp-content/uploads/2019/06/numpy-random-choice_featured-image.png' alt='category {category}' /></Link>\n        </>\n    )\n}\n\nexport default Home","import axios from \"axios\";\n\n//const BASEURL = \"/api/search/\"\n//const BASEURL = \"/api/search/\"\nconst BASEURL = \"https://sv443.net/jokeapi/category/\";\n\n// Export an object with a \"search\" method that searches the Giphy API for the passed query\nexport default {\n  search: async function (query, res) {\n    res = axios.get(BASEURL + query)\n    return res.then(console.log(\"requested on API page.\")).catch(err => { \n      alert(\"There is a bug in the Redux State. Try changing the Category in the dropdown!\");\n      throw err; \n    });\n  },\n  searchall: function (query) {\n    return axios.get(BASEURL + query).then(({ data }) => data).catch(err => { throw err; });\n  }\n};","import React, { Component, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport API from '../API';\nimport store from '../store/Store';\n\n\nfunction Joke() {\n    let category = store.getState();\n    console.log(category.Category)\n\n    const [dropdownchoice, setdropdownchoice] = useState(category.Category);\n    const [joke, setJoke] = useState(\"My random joke goes here and will be replaced with redux.\");\n    const [delivery, setDelivery] = useState(\"\")\n    const [history, setHistory] = useState(category.History)\n\n    const changeCategory = (e) => {\n        setdropdownchoice(e.target.value);\n        let newChoice = e.target.value;\n        console.log(newChoice);\n        if (e.target.value === 'Random') {\n            store.dispatch({ type: 'RANDOM', data: 'Random' });\n        } else if (e.target.value === 'Miscellaneous') {\n            store.dispatch({ type: 'MISC', data: 'Miscellaneous' });\n        } else if (e.target.value === 'Programming') {\n            store.dispatch({ type: 'PROGRAMMING', data: 'Programming' });\n        } else if (e.target.value === 'Dark') {\n            store.dispatch({ type: 'DARK', data: 'Dark' });\n        } else {\n            store.dispatch({ type: 'RANDOM', data: 'Random' });\n        }\n        API.search(e.target.value).then((res) => {\n            console.log(res)\n            let jokeholder = res.data.joke || res.data.setup;\n            setJoke(jokeholder)\n            setDelivery(res.data.delivery || \"\")\n        })\n    }\n\n\n    const newJoke = () => {\n        API.search(category.Category).then((res) => {\n            console.log(res)\n            console.log(res.status)\n            if (res === null || undefined) { return alert(\"ERRRRORs\") };\n            console.log(res)\n            let jokeholder = res.data.joke || res.data.setup;\n            setJoke(jokeholder)\n            setDelivery(res.data.delivery || \"\")\n            console.log(joke);\n            let addJoke = {}\n            if (res.data.joke) {\n                addJoke.joke = res.data.joke;\n            } else {\n                addJoke.setup = res.data.setup;\n                addJoke.delivery = res.data.delivery\n            }\n            setHistory(addJoke);\n        });\n    }\n    return (\n        <>\n            <div className=\"jumbotron\">\n                <Link to='/'><h1 className=\"jokeheader\">Joke Generator</h1></Link>\n                <p className=\"jokeaterisk\">* Limited to 25 req per minute</p>\n            </div>\n            <form action=\"#\" onChange={(e) => changeCategory(e)}>\n                <div class=\"select-box\">\n                    <label for=\"select-box1\" class=\"label select-box1\"><span class=\"label-desc\">{dropdownchoice}</span> </label>\n                    <select id=\"select-box1\" class=\"select\">\n                        <option value=\"Programming\">Programming</option>\n                        <option value=\"Miscellaneous\">Miscellaneous</option>\n                        <option value=\"Dark\">Dark</option>\n                        <option value=\"Random\">Random</option>\n                    </select>\n\n                </div>\n\n            </form>\n            <center>\n                <div className=\"jokecontent\">\n                    <h4 className='theJoke'> {joke}</h4>\n                    <h4 className='theJoke'> {delivery}</h4>\n                    <button onClick={newJoke}>Show me more!</button>\n                </div>\n            </center>\n            {/* <div className=\"history\">\n                history div\n                {history.map(item => <p>{item.joke}</p>)}\n                {aliases.map(item => <li>{item}</li>)} \n\n            </div> */}\n        </>\n    )\n}\nexport default Joke","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, HashRouter, Switch, Route, Link} from \"react-router-dom\";\nimport logo from './logo.svg';\nimport './App.css';\nimport './pages/style.css';\nimport Home from './pages/Home';\nimport Joke from './pages/Joke';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter basename=\"/\">\n          <Route exact path=\"/joke\" component={Joke} />\n          <Route exact path='/' component={Home} />\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}